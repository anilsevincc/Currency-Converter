

package com.mycompany.currencyconverter;


public class CurrencyConverter {

    public static void main(String[] args) {
        MainFrame frame = new MainFrame();
        frame.setVisible(true);
       
    }
}



package com.mycompany.currencyconverter;

import java.util.Locale;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;


public class MainFrame extends javax.swing.JFrame {

    
    double input1;
    double output;
    double dollar = 34.18;
    double euro = 37.72;
    double pound = 44.81;
    double frank = 40.17;
    
    
    public MainFrame() {
        initComponents();
        
        labelDollar.setText("$ " + String.valueOf(dollar));
        labelEuro.setText("€ " + String.valueOf(euro));
        labelPound.setText("£ " + String.valueOf(pound));
        labelFrank.setText("ß " + String.valueOf(frank));
        
        textfieldInput1.getDocument().addDocumentListener(new DocumentListener(){
            @Override
            public void insertUpdate(DocumentEvent e) {
                convertCurrency();
                }

            @Override
            public void removeUpdate(DocumentEvent e) {
                convertCurrency();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                convertCurrency();
            }
        
       
        });
        
    }
    private void convertCurrency(){
        try {
            input1 = Double.parseDouble(textfieldInput1.getText());
        } catch (NumberFormatException e) {
            textfieldOutput.setText("");
            return;
        }
        
        if (Combobox2.getSelectedIndex() == 0 && Combobox1.getSelectedIndex() == 1) {
            textfieldOutput.setText(String.format(Locale.ENGLISH,"%.3f",input1 * dollar));//dolar- tl
        }else if (Combobox2.getSelectedIndex() == 0 && Combobox1.getSelectedIndex() == 2) {
            textfieldOutput.setText(String.format(Locale.ENGLISH,"%.3f",input1 * euro));//euro - tl
        }else if (Combobox2.getSelectedIndex() == 0 && Combobox1.getSelectedIndex() == 3) {
            textfieldOutput.setText(String.format(Locale.ENGLISH,"%.3f",input1 * pound));//pound - tl
        }else if (Combobox2.getSelectedIndex() == 0 && Combobox1.getSelectedIndex() == 4) {
            textfieldOutput.setText(String.format(Locale.ENGLISH,"%.3f",input1 * frank));//frank - tl
        }else if (Combobox2.getSelectedIndex() == 0 && Combobox1.getSelectedIndex() == 0) {
            textfieldOutput.setText(String.format(Locale.ENGLISH,"%.3f",input1));//tl - tl
        }else if (Combobox2.getSelectedIndex() == 1 && Combobox1.getSelectedIndex() == 0) {
            textfieldOutput.setText(String.format(Locale.ENGLISH,"%.3f",input1 / dollar));//tl - dolar
        }else if (Combobox2.getSelectedIndex() == 1 && Combobox1.getSelectedIndex() == 1) {
            textfieldOutput.setText(String.format(Locale.ENGLISH,"%.3f",input1));//dolar - dolar
        }else if (Combobox2.getSelectedIndex() == 1 && Combobox1.getSelectedIndex() == 2) {
            textfieldOutput.setText(String.format(Locale.ENGLISH,"%.3f",input1 / dollar));//euro - dolar
        }else if (Combobox2.getSelectedIndex() == 1 && Combobox1.getSelectedIndex() == 3) {
            textfieldOutput.setText(String.format(Locale.ENGLISH,"%.3f",input1 / dollar));//pound - dolar
        }else if (Combobox2.getSelectedIndex() == 1 && Combobox1.getSelectedIndex() == 4) {
            textfieldOutput.setText(String.format(Locale.ENGLISH,"%.3f",input1 / dollar));//frank - dolar
        }else if (Combobox2.getSelectedIndex() == 2 && Combobox1.getSelectedIndex() == 0) {
            textfieldOutput.setText(String.format(Locale.ENGLISH,"%.3f",input1 / euro));//tl - euro
        }else if (Combobox2.getSelectedIndex() == 2 && Combobox1.getSelectedIndex() == 1) {
            textfieldOutput.setText(String.format(Locale.ENGLISH,"%.3f",input1 / euro));//dolar - euro
        }else if (Combobox2.getSelectedIndex() == 2 && Combobox1.getSelectedIndex() == 2) {
            textfieldOutput.setText(String.format(Locale.ENGLISH,"%.3f",input1));//euro - euro
        }else if (Combobox2.getSelectedIndex() == 2 && Combobox1.getSelectedIndex() == 3) {
            textfieldOutput.setText(String.format(Locale.ENGLISH,"%.3f",input1 / euro));//pound - euro
        }else if (Combobox2.getSelectedIndex() == 2 && Combobox1.getSelectedIndex() == 4) {
            textfieldOutput.setText(String.format(Locale.ENGLISH,"%.3f",input1 / euro));//frank - euro
        }else if (Combobox2.getSelectedIndex() == 3 && Combobox1.getSelectedIndex() == 0) {
            textfieldOutput.setText(String.format(Locale.ENGLISH,"%.3f",input1 / pound));//tl - pound
        }else if (Combobox2.getSelectedIndex() == 3 && Combobox1.getSelectedIndex() == 1) {
            textfieldOutput.setText(String.format(Locale.ENGLISH,"%.3f",input1 / pound));//dolar - pound
        }else if (Combobox2.getSelectedIndex() == 3 && Combobox1.getSelectedIndex() == 2) {
            textfieldOutput.setText(String.format(Locale.ENGLISH,"%.3f",input1 / pound));//euro - pound
        }else if (Combobox2.getSelectedIndex() == 3 && Combobox1.getSelectedIndex() == 3) {
            textfieldOutput.setText(String.format(Locale.ENGLISH,"%.3f",input1));//pound - pound
        }else if (Combobox2.getSelectedIndex() == 3 && Combobox1.getSelectedIndex() == 4) {
            textfieldOutput.setText(String.format(Locale.ENGLISH,"%.3f",input1 / pound));//frank - pound
        }else if (Combobox2.getSelectedIndex() == 4 && Combobox1.getSelectedIndex() == 0) {
            textfieldOutput.setText(String.format(Locale.ENGLISH,"%.3f",input1 / frank));//tl - frank
        }else if (Combobox2.getSelectedIndex() == 4 && Combobox1.getSelectedIndex() == 1) {
            textfieldOutput.setText(String.format(Locale.ENGLISH,"%.3f",input1 / frank));//dolar - frank
        }else if (Combobox2.getSelectedIndex() == 4 && Combobox1.getSelectedIndex() == 2) {
            textfieldOutput.setText(String.format(Locale.ENGLISH,"%.3f",input1 / frank));//euro - frank
        }else if (Combobox2.getSelectedIndex() == 4 && Combobox1.getSelectedIndex() == 3) {
            textfieldOutput.setText(String.format(Locale.ENGLISH,"%.3f",input1 / frank));//pound - frank
        }else if (Combobox2.getSelectedIndex() == 4 && Combobox1.getSelectedIndex() == 4) {
            textfieldOutput.setText(String.format(Locale.ENGLISH,"%.3f",input1));//frank- frank
        }else {
            textfieldOutput.setText("");
        }
    }

    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        labelTitle = new javax.swing.JLabel();
        panelCurrencies = new javax.swing.JPanel();
        labelDollar = new javax.swing.JLabel();
        labelEuro = new javax.swing.JLabel();
        labelPound = new javax.swing.JLabel();
        labelFrank = new javax.swing.JLabel();
        panelCalculate = new javax.swing.JPanel();
        textfieldInput1 = new javax.swing.JTextField();
        Combobox1 = new javax.swing.JComboBox<>();
        Combobox2 = new javax.swing.JComboBox<>();
        textfieldOutput = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Currency Converter");
        setBackground(new java.awt.Color(30, 62, 98));
        setForeground(new java.awt.Color(30, 62, 98));
        setPreferredSize(new java.awt.Dimension(800, 600));
        setResizable(false);

        labelTitle.setFont(new java.awt.Font("Monospaced", 0, 24)); // NOI18N
        labelTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelTitle.setText("Currency Converter");

        labelDollar.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N

        labelEuro.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N

        labelPound.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N

        labelFrank.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N

        javax.swing.GroupLayout panelCurrenciesLayout = new javax.swing.GroupLayout(panelCurrencies);
        panelCurrencies.setLayout(panelCurrenciesLayout);
        panelCurrenciesLayout.setHorizontalGroup(
            panelCurrenciesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCurrenciesLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(labelDollar, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addComponent(labelEuro, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(labelPound, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addComponent(labelFrank, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        panelCurrenciesLayout.setVerticalGroup(
            panelCurrenciesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCurrenciesLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelCurrenciesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelDollar, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelEuro, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelPound, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelFrank, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        panelCalculate.setBackground(new java.awt.Color(187, 187, 187));

        textfieldInput1.setText("1");
        textfieldInput1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textfieldInput1ActionPerformed(evt);
            }
        });

        Combobox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Turkish Liras", "Dollar", "Euro", "Pound", "Frank" }));

        Combobox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Turkish Liras", "Dollar", "Euro", "Pound", "Frank" }));
        Combobox2.setSelectedIndex(1);

        textfieldOutput.setEditable(false);
        textfieldOutput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textfieldOutputActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelCalculateLayout = new javax.swing.GroupLayout(panelCalculate);
        panelCalculate.setLayout(panelCalculateLayout);
        panelCalculateLayout.setHorizontalGroup(
            panelCalculateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCalculateLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(textfieldInput1, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Combobox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(textfieldOutput, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Combobox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(94, Short.MAX_VALUE))
        );
        panelCalculateLayout.setVerticalGroup(
            panelCalculateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCalculateLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(panelCalculateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textfieldInput1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Combobox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Combobox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textfieldOutput, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(247, 247, 247)
                        .addComponent(labelTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(96, 96, 96)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(panelCurrencies, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(panelCalculate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(97, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addComponent(labelTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(panelCurrencies, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 158, Short.MAX_VALUE)
                .addComponent(panelCalculate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(148, 148, 148))
        );

        getAccessibleContext().setAccessibleParent(this);

        pack();
    }// </editor-fold>                        

    private void textfieldInput1ActionPerformed(java.awt.event.ActionEvent evt) {                                                
        input1 = Double.parseDouble(textfieldInput1.getText());
        if (Combobox1.getSelectedIndex() == 0 && Combobox2.getSelectedIndex() == 1) {
            textfieldOutput.setText(String.valueOf(input1 * dollar));
        }else if (Combobox1.getSelectedIndex() == 0 && Combobox2.getSelectedIndex() == 2) {
            textfieldOutput.setText(String.valueOf(input1 * euro));
        }else if (Combobox1.getSelectedIndex() == 0 && Combobox2.getSelectedIndex() == 3) {
            textfieldOutput.setText(String.valueOf(input1 * pound));
        }else if (Combobox1.getSelectedIndex() == 0 && Combobox2.getSelectedIndex() == 4) {
            textfieldOutput.setText(String.valueOf(input1 * frank));
        }
              
        
    }                                               

    private void textfieldOutputActionPerformed(java.awt.event.ActionEvent evt) {                                                
        
    }                                               

    
    public static void main(String args[]) {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify                     
    javax.swing.JComboBox<String> Combobox1;
    javax.swing.JComboBox<String> Combobox2;
    javax.swing.JLabel labelDollar;
    javax.swing.JLabel labelEuro;
    javax.swing.JLabel labelFrank;
    javax.swing.JLabel labelPound;
    javax.swing.JLabel labelTitle;
    javax.swing.JPanel panelCalculate;
    javax.swing.JPanel panelCurrencies;
    javax.swing.JTextField textfieldInput1;
    javax.swing.JTextField textfieldOutput;
    // End of variables declaration                   
}
